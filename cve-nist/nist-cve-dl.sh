#!/bin/bash

set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

temp_dir="./temp"
mkdir -p "$temp_dir"

download_and_process() {
    local year=$1
    local source_url=$2
    local file_name=$3
    local use_curl=$4

    echo "Tentative de téléchargement pour ${year} depuis ${source_url}"
    if $use_curl; then
        curl -o "$temp_dir/$file_name.tmp" "$source_url" && mv "$temp_dir/$file_name.tmp" "$temp_dir/$file_name"
    else
        wget -O "$temp_dir/$file_name.tmp" "$source_url" && mv "$temp_dir/$file_name.tmp" "$temp_dir/$file_name"
    fi

    if [ -f "$temp_dir/$file_name" ]; then
        echo "Téléchargement réussi pour ${year}."
        echo "Décompression de $file_name..."
        if [[ $file_name == *.xz ]]; then
            xz -d -k "$temp_dir/$file_name"
        elif [[ $file_name == *.zip ]]; then
            unzip -o "$temp_dir/$file_name" -d "$temp_dir"
        fi
        rm "$temp_dir/$file_name"
        echo "Traitement du fichier ${file_name%.*}..."
        python3 "$DIR/filter-json.py" "$temp_dir/${file_name%.*}"
    else
        echo "Échec du téléchargement pour ${year}."
    fi
}

# Téléchargement des CVE depuis GitHub (fkie-cad) pour les années 1999 à 2024
for year in {1999..2024}; do
    github_url="https://github.com/fkie-cad/nvd-json-data-feeds/releases/latest/download/CVE-${year}.json.xz"
    file_name="CVE-${year}.json.xz"
    download_and_process "$year" "$github_url" "$file_name" false
done

# Téléchargement des CVE depuis le site du NIST en cas d'échec du téléchargement depuis GitHub
for year in {2002..2024}; do
    git_file_name="CVE-${year}.json"
    file_json="nvdcve-1.1-${year}.json"
    if [ ! -f "$temp_dir/$git_file_name" ]; then
        nist_url="https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-${year}.json.zip"
        file_name="nvdcve-1.1-${year}.json.zip"
        download_and_process "$year" "$nist_url" "$file_name" true
    fi
done
